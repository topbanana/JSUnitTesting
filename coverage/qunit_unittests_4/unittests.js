/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['qunit_unittests_4/unittests.js']) {
  _$jscoverage['qunit_unittests_4/unittests.js'] = [];
  _$jscoverage['qunit_unittests_4/unittests.js'][2] = 0;
  _$jscoverage['qunit_unittests_4/unittests.js'][4] = 0;
  _$jscoverage['qunit_unittests_4/unittests.js'][7] = 0;
  _$jscoverage['qunit_unittests_4/unittests.js'][9] = 0;
  _$jscoverage['qunit_unittests_4/unittests.js'][12] = 0;
  _$jscoverage['qunit_unittests_4/unittests.js'][15] = 0;
  _$jscoverage['qunit_unittests_4/unittests.js'][17] = 0;
}
_$jscoverage['qunit_unittests_4/unittests.js'].source = ["<span class=\"c\">/// &lt;reference path=\"library.js\" /&gt;</span>","module<span class=\"k\">(</span><span class=\"s\">\"TestableObject\"</span><span class=\"k\">)</span>","","test<span class=\"k\">(</span><span class=\"s\">\"TestableObject Exists\"</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t<span class=\"c\">// arrange</span>","\t<span class=\"c\">// act</span>","\t<span class=\"k\">var</span> type<span class=\"k\">=</span> <span class=\"k\">typeof</span><span class=\"k\">(</span>TestableObject<span class=\"k\">);</span>","\t<span class=\"c\">// assert</span>","\tequals<span class=\"k\">(</span>type<span class=\"k\">,</span> <span class=\"s\">\"object\"</span><span class=\"k\">,</span> <span class=\"s\">\"TestableObject to be object\"</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">);</span>","\t","test<span class=\"k\">(</span><span class=\"s\">\"TestableObject.GetName returns string\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t<span class=\"c\">// arrange</span>","\t<span class=\"c\">// act</span>","\t<span class=\"k\">var</span> type<span class=\"k\">=</span> <span class=\"k\">typeof</span><span class=\"k\">(</span>TestableObject<span class=\"k\">.</span>getName<span class=\"k\">());</span>","\t<span class=\"c\">// arrange</span>","\tequals<span class=\"k\">(</span>type<span class=\"k\">,</span> <span class=\"s\">\"string\"</span><span class=\"k\">,</span> <span class=\"s\">\"TestableObject.getName() to be object\"</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">);</span>"];
_$jscoverage['qunit_unittests_4/unittests.js'][2]++;
module("TestableObject");
_$jscoverage['qunit_unittests_4/unittests.js'][4]++;
test("TestableObject Exists", (function () {
  _$jscoverage['qunit_unittests_4/unittests.js'][7]++;
  var type = (typeof TestableObject);
  _$jscoverage['qunit_unittests_4/unittests.js'][9]++;
  equals(type, "object", "TestableObject to be object");
}));
_$jscoverage['qunit_unittests_4/unittests.js'][12]++;
test("TestableObject.GetName returns string", (function () {
  _$jscoverage['qunit_unittests_4/unittests.js'][15]++;
  var type = (typeof TestableObject.getName());
  _$jscoverage['qunit_unittests_4/unittests.js'][17]++;
  equals(type, "string", "TestableObject.getName() to be object");
}));
